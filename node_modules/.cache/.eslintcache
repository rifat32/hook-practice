[{"/home/rifat/hookpractice/src/index.js":"1","/home/rifat/hookpractice/src/App.js":"2","/home/rifat/hookpractice/src/reportWebVitals.js":"3","/home/rifat/hookpractice/src/context.js":"4","/home/rifat/hookpractice/src/components/ExpenseList.js":"5","/home/rifat/hookpractice/src/components/ExpenseForm.js":"6","/home/rifat/hookpractice/src/components/Alert.js":"7","/home/rifat/hookpractice/src/components/ExpenseItem.js":"8"},{"size":588,"mtime":1615726464067,"results":"9","hashOfConfig":"10"},{"size":1222,"mtime":1615730283222,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612927094999,"results":"12","hashOfConfig":"10"},{"size":3156,"mtime":1615729132162,"results":"13","hashOfConfig":"10"},{"size":533,"mtime":1613141597379,"results":"14","hashOfConfig":"10"},{"size":1431,"mtime":1613311621463,"results":"15","hashOfConfig":"10"},{"size":200,"mtime":1613210572435,"results":"16","hashOfConfig":"10"},{"size":722,"mtime":1613141702083,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xhrk8s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/rifat/hookpractice/src/index.js",[],["36","37"],"/home/rifat/hookpractice/src/App.js",["38","39","40","41","42","43","44","45","46"],"/home/rifat/hookpractice/src/reportWebVitals.js",[],"/home/rifat/hookpractice/src/context.js",["47","48","49"],"import React, {useState, useEffect,useContext} from 'react';\nconst ExpenseContext = React.createContext() ;\nfunction ExpenseProvider(props) {\n    const intitalExpenses = localStorage.getItem('expenses')? JSON.parse(localStorage.getItem('expenses')):[];\n    const [expenses,setExpenses] = useState(intitalExpenses);\n    const [charge,setCharge] = useState('');\n    const [amount,setAmount] = useState('');\n    const [alert,setAlert] = useState({show:false});\n    const [edit,setEdit] = useState(false);\n    const [id,setId] = useState(0);\n    useEffect(() => {\n        localStorage.setItem('expenses',JSON.stringify(expenses))\n      },[expenses])\n      const handleCharge = (e) => {\n        setCharge(e.target.value)\n      }\n      const handleAmount = (e) => {\n        setAmount(e.target.value)\n      }\n      const handleAlert = ({type,text}) => {\n        setAlert({show:true,type,text});\n        setTimeout(() => {\n    setAlert({show:false});\n        },3000)\n      }\n      const handleSubmit = (e) => {\n        e.preventDefault();\n        if(amount && charge){\n    if(edit){\n    let tempExpenses = expenses.map((item) => {\n      return item.id === id? {...item,charge,amount} : item\n    } )\n    setExpenses(tempExpenses)\n    setEdit(false)\n    handleAlert({type:'success',text:'item edited'});\n    }\n    else{\n      const newId = expenses.length + 1;\n    const singleExpense = {id:newId,charge:charge,amount:amount};\n    setExpenses([...expenses,singleExpense]);\n    handleAlert({type:'success',text:'item added'});\n    \n    }\n    \n    \n        \n    setCharge('');\n    setAmount('');\n        }else{\n          // handle alert call\n          handleAlert({type:'danger',text:`charge can not be empty value and amount has to be bigger than zero.`});\n    \n        }\n      }\n      const clearItems = () => {\n        setExpenses([]);\n        handleAlert({type:'danger',text:' all items deleted'});\n        }\n        const handleDelete = (id) => {\n          \n        let tempExpenses = expenses.filter((el) => el.id != id)\n        setExpenses(tempExpenses);\n        handleAlert({type:'danger',text:'item is deleted'});\n        }\n        const handleEdit = (id) => {\n            const expense = expenses.find(el => el.id === id);\n            let {charge, amount} = expense;\n            setCharge(charge)\n            setAmount(amount)\n            setEdit(true);\n            setId(id);\n            console.log(id)\n          \n          }\n\n\n    return (\n        <ExpenseContext.Provider value={\n            {\n                expenses : expenses,\n                setExpenses: setExpenses,\n                charge,\n                setCharge,\n                amount,\n                setAmount,\n                alert,\n                setAlert,\n                edit,\n                setEdit,\n                id,\n                setId,\n                handleCharge,\n                handleAmount,\n                handleAlert,\n                clearItems,\n                handleDelete,\n                handleEdit\n\n            }\n            \n            }>\n{props.children}\n        </ExpenseContext.Provider>\n            \n        \n    )\n}\n\nexport {ExpenseContext,ExpenseProvider}\n","/home/rifat/hookpractice/src/components/ExpenseList.js",[],"/home/rifat/hookpractice/src/components/ExpenseForm.js",[],"/home/rifat/hookpractice/src/components/Alert.js",[],"/home/rifat/hookpractice/src/components/ExpenseItem.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":16,"nodeType":"56","messageId":"57","endLine":2,"endColumn":24},{"ruleId":"54","severity":1,"message":"58","line":2,"column":26,"nodeType":"56","messageId":"57","endLine":2,"endColumn":35},{"ruleId":"54","severity":1,"message":"59","line":14,"column":5,"nodeType":"56","messageId":"57","endLine":14,"endColumn":16},{"ruleId":"54","severity":1,"message":"60","line":16,"column":5,"nodeType":"56","messageId":"57","endLine":16,"endColumn":14},{"ruleId":"54","severity":1,"message":"61","line":18,"column":5,"nodeType":"56","messageId":"57","endLine":18,"endColumn":14},{"ruleId":"54","severity":1,"message":"62","line":20,"column":5,"nodeType":"56","messageId":"57","endLine":20,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":22,"column":5,"nodeType":"56","messageId":"57","endLine":22,"endColumn":12},{"ruleId":"54","severity":1,"message":"64","line":23,"column":5,"nodeType":"56","messageId":"57","endLine":23,"endColumn":7},{"ruleId":"54","severity":1,"message":"65","line":24,"column":5,"nodeType":"56","messageId":"57","endLine":24,"endColumn":10},{"ruleId":"54","severity":1,"message":"66","line":1,"column":36,"nodeType":"56","messageId":"57","endLine":1,"endColumn":46},{"ruleId":"54","severity":1,"message":"67","line":26,"column":13,"nodeType":"56","messageId":"57","endLine":26,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":61,"column":58,"nodeType":"70","messageId":"71","endLine":61,"endColumn":60},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setExpenses' is assigned a value but never used.","'setCharge' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'useContext' is defined but never used.","'handleSubmit' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]