{"ast":null,"code":"var _jsxFileName = \"/home/rifat/hookpractice/src/context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseContext = /*#__PURE__*/React.createContext();\n\nfunction ExpenseProvider(props) {\n  _s();\n\n  const intitalExpenses = localStorage.getItem('expenses') ? JSON.parse(localStorage.getItem('expenses')) : [];\n  const [expenses, setExpenses] = useState(intitalExpenses);\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: (expenses, setExpenses),\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExpenseProvider, \"eeeTjreNqxYolTbkuZP2c71gcSE=\");\n\n_c = ExpenseProvider;\nexport { ExpenseContext, ExpenseProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"sources":["/home/rifat/hookpractice/src/context.js"],"names":["React","useState","useEffect","useContext","ExpenseContext","createContext","ExpenseProvider","props","intitalExpenses","localStorage","getItem","JSON","parse","expenses","setExpenses","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAmCC,UAAnC,QAAoD,OAApD;;AACA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAlC,GAA+E,EAAvG;AACA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAACO,eAAD,CAAvC;AACA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,GAAEK,QAAQ,EAACC,WAAX,CAA9B;AAAA,cACPP,KAAK,CAACQ;AADC;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAVQT,e;;KAAAA,e;AAYT,SAAQF,cAAR,EAAuBE,eAAvB","sourcesContent":["import React, {useState, useEffect,useContext} from 'react';\nconst ExpenseContext = React.createContext() ;\nfunction ExpenseProvider(props) {\n    const intitalExpenses = localStorage.getItem('expenses')? JSON.parse(localStorage.getItem('expenses')):[];\n    const [expenses,setExpenses] = useState(intitalExpenses);\n    return (\n        <ExpenseContext.Provider value={expenses,setExpenses}>\n{props.children}\n        </ExpenseContext.Provider>\n            \n        \n    )\n}\n\nexport {ExpenseContext,ExpenseProvider}\n"]},"metadata":{},"sourceType":"module"}